<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Philmish's Blog</title><link>https://philmish.github.io/</link><description>A little bit of this and a little bit of that.</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://philmish.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Intel x86 Assembly Overview</title><link>https://philmish.github.io/2023/11/intel86_assembly/</link><pubDate>Mon, 13 Nov 2023 00:00:00 +0000</pubDate><author>philmish</author><guid>https://philmish.github.io/2023/11/intel86_assembly/</guid><description>This is an overview over the relevant basics of Intel&amp;rsquo;s x86 Assembly language.
Architecture follows Van Neuman architecture Hardware components: CPU, RAM, I/O bitness: little endian Figure 1. Simplified Hardware Layout Main Memory Layout Data: also called data section, put in place when the program is initially loaded, the values contained in data may not be changed (static) and are available to every part of the program (global) Code: includes the instructions fetched by the CPU to execute the program, controls how the program&amp;rsquo;s tasks are orchestrated Heap: is used for dynamic memory during execution, changes frequently while the program is running Stack: is used for local variables and function parameters, helps control flow Figure 2.</description></item><item><title>Practical Malware Analysis Chapter 1 Lab 1</title><link>https://philmish.github.io/2023/11/chapter-one-lab-01/</link><pubDate>Sun, 05 Nov 2023 00:00:00 +0000</pubDate><author>philmish</author><guid>https://philmish.github.io/2023/11/chapter-one-lab-01/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/cover_prac_mal_ana.png" referrerpolicy="no-referrer">
&lt;/div>After being interested in the topic of Malware Reversing/Research for a while now and picking Practical Malware Analysis last month. I started working through it this week and, as of now, really enjoying it. The first chapter concentrates on the basics of static analysis of binaries. As the author states himself, a lot of the specifics in the book are now out of date. For example, the Labs are originaly designed for Windows XP.</description></item><item><title>GDB Basics Cheatsheet</title><link>https://philmish.github.io/2023/05/gdb-basics/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><author>philmish</author><guid>https://philmish.github.io/2023/05/gdb-basics/</guid><description>Launching Launching against a binary 1 gdb ./path-to-binary</description></item></channel></rss>