<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Linux - Tag - Philmish's Blog</title><link>https://philmish.github.io/tags/linux/</link><description>Linux - Tag - Philmish's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://philmish.github.io/tags/linux/" rel="self" type="application/rss+xml"/><item><title>GDB Basics Cheatsheet</title><link>https://philmish.github.io/2023/05/gdb-basics/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><author>philmish</author><guid>https://philmish.github.io/2023/05/gdb-basics/</guid><description><![CDATA[Launching Launching against a binary 1 gdb ./path-to-binary Launch against a process ID 1 gdb -silent `pidof &lt;binary-name&gt;` Launch in TUI Mode 1 gdb -tui Commands Set breakpoint 1 2 (gdb) b main // Breaks at main() (gdb) break strcpy // Breaks at strcpy() List defined breakpoints 1 (gdb) info b Continue execution 1 (gdb) c Step into 1 (gdb) s Show stored values 1 2 3 4 5 6 (gdb) print $esp (gdb) x/5x $esp-10 // in Hex (gdb) x/5s $esp-10 //String (gdb) x/5d $esp-10 //Decimal (gdb) x/5i $esp-10 //Assembly Instructions Show where in the source file we are 1 (gdb) list Show where execution is 1 (gdb) where Show symbols 1 (gdb) info file Show all defined functions 1 (gdb) info functions Show function disassembly 1 (gdb) disas &lt;func-name&gt; Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 (gdb) disas strcpy Dump of assembler code for function strcpy: 0x42079dd0 &lt;strcpy+0&gt;: push %ebp 0x42079dd1 &lt;strcpy+1&gt;: mov %esp,%ebp 0x42079dd3 &lt;strcpy+3&gt;: push %esi 0x42079dd4 &lt;strcpy+4&gt;: mov 0x8(%ebp),%esi 0x42079dd7 &lt;strcpy+7&gt;: mov 0xc(%ebp),%edx 0x42079dda &lt;strcpy+10&gt;: mov %esi,%eax 0x42079ddc &lt;strcpy+12&gt;: sub %edx,%eax 0x42079dde &lt;strcpy+14&gt;: lea 0xffffffff(%eax),%ecx 0x42079de1 &lt;strcpy+17&gt;: jmp 0x42079df0 &lt;strcpy+32&gt; 0x42079de3 &lt;strcpy+19&gt;: nop 0x42079de4 &lt;strcpy+20&gt;: nop 0x42079dfb &lt;strcpy+43&gt;: mov %esi,%eax 0x42079dfd &lt;strcpy+45&gt;: pop %esi 0x42079dfe &lt;strcpy+46&gt;: pop %ebp 0x42079dff &lt;strcpy+47&gt;: ret End of assembler dump.]]></description></item></channel></rss>